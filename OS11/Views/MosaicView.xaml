<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:gif="http://wpfanimatedgif.codeplex.com"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:OS11_Model="clr-namespace:OS11.Model" mc:Ignorable="d" x:Class="OS11.Views.MosaicView"
        Padding="0" Margin="0" Opacity="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinWidth="904" MinHeight="606">
	<UserControl.Resources>
		<Style x:Key="AddBtnTemplate" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Cursor="Hand">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.2"/>
										<VisualTransition GeneratedDuration="0" To="MouseOver"/>
										<VisualTransition From="MouseOver" GeneratedDuration="0"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="#FFC61611"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="#FF910E0A"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" Fill="#FFD14836" Margin="0" Stroke="#FFD4211B" Height="30" RadiusX="2" RadiusY="2"/>
							<StackPanel Margin="15,0" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
								<Label Content="" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" Padding="0" Foreground="White" FontFamily="/OS11;component/Fonts/#FontAwesome" FontWeight="Bold" HorizontalContentAlignment="Center" Margin="0,0,5,0"/>
								<Label Content="ADD" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" Foreground="White" FontFamily="Lucida Sans" FontWeight="Bold"/>
							</StackPanel>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" Height="0"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="SaveBtnTemplate" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Cursor="Hand">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.2"/>
										<VisualTransition GeneratedDuration="0" To="MouseOver"/>
										<VisualTransition From="MouseOver" GeneratedDuration="0"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="#FF3276B1"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="#FF285E8E"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" Fill="#FF428BCA" Margin="0" Stroke="#FF357EBD" Height="30" RadiusX="2" RadiusY="2" StrokeDashArray="0"/>
							<StackPanel Margin="15,0" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
								<Label Content="" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" Padding="0" Foreground="White" FontFamily="/OS11;component/Fonts/#FontAwesome" FontWeight="Normal" HorizontalContentAlignment="Center" Margin="0,0,6,0" FontSize="14.667" ScrollViewer.VerticalScrollBarVisibility="Disabled"/>
								<Label Content="SAVE" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" Foreground="White" FontFamily="Lucida Sans" FontWeight="Bold"/>
							</StackPanel>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" Height="0"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="AddSampleBtnTemplate" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Cursor="Hand">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.2"/>
										<VisualTransition GeneratedDuration="0" To="MouseOver"/>
										<VisualTransition From="MouseOver" GeneratedDuration="0"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="#FF3276B1"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="#FF285E8E"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" Fill="#FF428BCA" Margin="0" Stroke="#FF357EBD" Height="30" RadiusX="2" RadiusY="2" StrokeDashArray="0"/>
							<StackPanel Margin="15,0" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
								<Label Content="" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" Padding="0" Foreground="White" FontFamily="/OS11;component/Fonts/#FontAwesome" FontWeight="Normal" HorizontalContentAlignment="Center" Margin="0,0,6,0" FontSize="14.667" ScrollViewer.VerticalScrollBarVisibility="Disabled"/>
								<Label Content="ADD TO SAMPLES" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" Foreground="White" FontFamily="Lucida Sans" FontWeight="Bold"/>
							</StackPanel>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" Height="0"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MosaicItBtnTemplate" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Cursor="Hand">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.2"/>
										<VisualTransition GeneratedDuration="0" To="MouseOver"/>
										<VisualTransition From="MouseOver" GeneratedDuration="0"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="#FF3276B1"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="#FF285E8E"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
												<EasingColorKeyFrame KeyTime="0" Value="#FF3276B1"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" Fill="#FF428BCA" Margin="0" Stroke="White" Height="30" RadiusX="2" RadiusY="2" StrokeDashArray="0"/>
							<StackPanel Margin="15,0" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
								<Label Content="MOSAIQ IT!" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" Foreground="White" FontFamily="Lucida Sans" FontWeight="Bold" Margin="0,0,20,0"/>
							</StackPanel>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" Height="0"/>
							<Ellipse x:Name="ellipse" Fill="#FF428BCA" HorizontalAlignment="Right" Margin="0,0,-20,0" Stroke="#FFFBFBFB" Width="45" Height="45" StrokeThickness="1"/>
							<Label Content="" HorizontalAlignment="Right" Margin="0,0,-12,0" Width="28" FontFamily="/OS11;component/Fonts/#FontAwesome" Foreground="White" VerticalAlignment="Center" FontSize="18.667"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="SettingsBtnTemplate" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Cursor="Hand">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.2"/>
										<VisualTransition GeneratedDuration="0" To="MouseOver"/>
										<VisualTransition From="MouseOver" GeneratedDuration="0"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="#FF3276B1"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="#FF285E8E"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" Fill="#FF428BCA" Margin="0" Stroke="#FF357EBD" Height="30" RadiusX="2" RadiusY="2" StrokeDashArray="0"/>
							<StackPanel Margin="15,0" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
								<Label Content="" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" Padding="0" Foreground="White" FontFamily="/OS11;component/Fonts/#FontAwesome" FontWeight="Normal" HorizontalContentAlignment="Center" Margin="0,0,6,0" FontSize="14.667" ScrollViewer.VerticalScrollBarVisibility="Disabled"/>
								<Label Content="SETTINGS" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" Foreground="White" FontFamily="Lucida Sans" FontWeight="Bold"/>
							</StackPanel>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" Height="0"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<DataTemplate x:Key="ImageListItemTemplate">
			<ListBoxItem Content="ListBoxItem" HorizontalAlignment="Stretch" Margin="0,20,0,0" Style="{DynamicResource ListBoxItemStyle1}" VerticalAlignment="Stretch" Focusable="False"/>
		</DataTemplate>
		<LinearGradientBrush x:Key="VerticalScrollBarBackground" EndPoint="1,0" StartPoint="0,0">
			<GradientStop Color="#E1E1E1" Offset="0"/>
			<GradientStop Color="#EDEDED" Offset="0.20"/>
			<GradientStop Color="#EDEDED" Offset="0.80"/>
			<GradientStop Color="#E3E3E3" Offset="1"/>
		</LinearGradientBrush>
		<Style x:Key="TornImageItemContainerStyle" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="2,0,0,0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected"/>
									<VisualState x:Name="SelectedUnfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="true"/>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="Selector.IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
			<VirtualizingStackPanel IsItemsHost="True" HorizontalAlignment="Center"/>
		</ItemsPanelTemplate>
		<SolidColorBrush x:Key="ListBorder" Color="#828790"/>
		<Style x:Key="TornImageListTemplate" TargetType="{x:Type ListBox}">
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
			<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBox}">
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
							<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" Template="{DynamicResource ScrollViewerControlTemplate1}">
								<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</ScrollViewer>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsGrouping" Value="true">
								<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ControlTemplate x:Key="ScrollViewerControlTemplate1" TargetType="{x:Type ScrollViewer}">
			<Grid x:Name="Grid" Background="{TemplateBinding Background}" DataContext="{Binding Source={StaticResource TornImagesSampleData}}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
				<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
				<ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource TornImageListVScroll}" Width="12" LargeChange="0.2"/>
				<ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
			</Grid>
		</ControlTemplate>
		<DataTemplate x:Key="ItemTemplate">
			<StackPanel>
				<TextBlock Text="{Binding Property1}"/>
			</StackPanel>
		</DataTemplate>
		<SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4"/>
		<Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="true" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="HorizontalScrollBarBackground" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#E1E1E1" Offset="0"/>
			<GradientStop Color="#EDEDED" Offset="0.20"/>
			<GradientStop Color="#EDEDED" Offset="0.80"/>
			<GradientStop Color="#E3E3E3" Offset="1"/>
		</LinearGradientBrush>
		<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Rectangle x:Name="rectangle" Height="Auto" Margin="2,0" VerticalAlignment="Stretch" Fill="#FFA5A5A5" Width="Auto" RadiusX="2" RadiusY="2">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="#FF818181"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</Rectangle>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="TornImageListVScroll" TargetType="{x:Type ScrollBar}">
			<Setter Property="Background" Value="{StaticResource VerticalScrollBarBackground}"/>
			<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
			<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollBar}">
						<Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
							<Grid.RowDefinitions>
								<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" Height="0*"/>
								<RowDefinition Height="*"/>
								<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" Height="0*"/>
							</Grid.RowDefinitions>
							<Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
								<Track.DecreaseRepeatButton>
									<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
								</Track.IncreaseRepeatButton>
								<Track.Thumb>
									<Thumb Style="{StaticResource ScrollBarThumb}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper" Foreground="{x:Null}"/>
								</Track.Thumb>
							</Track>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="Orientation" Value="Horizontal">
					<Setter Property="Width" Value="Auto"/>
					<Setter Property="MinWidth" Value="0"/>
					<Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
					<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
					<Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground}"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ScrollBar}">
								<Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
									<Grid.ColumnDefinitions>
										<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
										<ColumnDefinition Width="0.00001*"/>
										<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
									</Grid.ColumnDefinitions>
									<RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow"/>
									<Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
										<Track.DecreaseRepeatButton>
											<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
										</Track.DecreaseRepeatButton>
										<Track.IncreaseRepeatButton>
											<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
										</Track.IncreaseRepeatButton>
										<Track.Thumb>
											<Thumb Style="{StaticResource ScrollBarThumb}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
										</Track.Thumb>
									</Track>
									<RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow"/>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsEnabled" Value="false">
										<Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="RemoveImgBtn" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<Ellipse x:Name="ellipse" Fill="#FFE02727" HorizontalAlignment="Right" Height="25" Margin="0" Stroke="#FF999999" VerticalAlignment="Stretch" Width="25" Visibility="Visible"/>
							<Label x:Name="label" Content="" HorizontalAlignment="Center" Height="Auto" Margin="0" VerticalAlignment="Center" FontFamily="/OS11;component/Fonts/#FontAwesome" Foreground="#FFF3F3F3" Visibility="Visible" d:LayoutOverrides="Height"/>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Grid Cursor="Hand" Focusable="True">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0" To="MouseOver"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="button">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="button">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="SelectedUnfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Button x:Name="tornImgBtn" Content="Button" Style="{DynamicResource tornImageBtn}" Click="TornImage_Click" Tag="{Binding tornImageUri}"/>
							<Button x:Name="button" Content="Button" HorizontalAlignment="Right" Height="25" Margin="0,-10,-10,0" Style="{DynamicResource RemoveImgBtn}" VerticalAlignment="Top" Width="25" Visibility="Hidden" Click="RemoveImgFromList" Tag="{Binding tornImageUri}"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="HelpBtnStyle" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Cursor="Hand">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.2"/>
										<VisualTransition GeneratedDuration="0" To="MouseOver"/>
										<VisualTransition From="MouseOver" GeneratedDuration="0"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="#FF3276B1"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="#FF285E8E"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" Fill="#FF428BCA" Margin="0" Stroke="#FF357EBD" Height="30" RadiusX="2" RadiusY="2" StrokeDashArray="0"/>
							<StackPanel Margin="15,0" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
								<Label Content="" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" Padding="0" Foreground="White" FontFamily="/OS11;component/Fonts/#FontAwesome" FontWeight="Normal" HorizontalContentAlignment="Center" Margin="0,0,6,0" FontSize="14.667" ScrollViewer.VerticalScrollBarVisibility="Disabled"/>
								<Label Content="HELP" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" Foreground="White" FontFamily="Lucida Sans" FontWeight="Bold"/>
							</StackPanel>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" Height="0"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="tornImageBtn" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<Rectangle x:Name="rectangle" Fill="White" Margin="0" Stroke="#FF999999" Width="140" Height="180" RadiusX="4" RadiusY="4" StrokeDashArray="4 2"/>
							<Border BorderBrush="{x:Null}" BorderThickness="1" Margin="0" Width="140" Height="180" CornerRadius="2" Padding="5" HorizontalAlignment="Center" VerticalAlignment="Center">
								<Image Margin="0" Source="{Binding tornImageUri, FallbackValue=../image/mosaiq_logo_mini.png}"/>
							</Border>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="rotateLeftBtnTemplate" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<Ellipse Fill="#FF428BCA" Stroke="White" StrokeThickness="2"/>
							<Label Content="" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="/OS11;component/Fonts/#FontAwesome" FontSize="24" Foreground="White"/>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="rotateRightBtnTemplate" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<Ellipse Fill="#FF428BCA" Stroke="White" StrokeThickness="2"/>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
							<Label Content="" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" FontFamily="/OS11;component/Fonts/#FontAwesome" Foreground="White" FontSize="24"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ReconstructAgainBtnTemp" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Cursor="Hand">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="#FF47A447"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="#FF398439"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" Fill="#FF5CB85C" Margin="0" Stroke="#FF4CAE4C" HorizontalAlignment="Center" VerticalAlignment="Center" Width="175" Height="40" RadiusX="4" RadiusY="4" />
							<StackPanel Margin="0" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
								<Label Content="" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontFamily="/OS11;component/Fonts/#FontAwesome" FontSize="16"/>
								<Label Content="Reconstruct Again!" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontSize="14.667"/>
							</StackPanel>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="BackBtn" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Cursor="Hand">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.2"/>
										<VisualTransition GeneratedDuration="0" To="MouseOver"/>
										<VisualTransition From="MouseOver" GeneratedDuration="0"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="#FFC61611"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
												<EasingColorKeyFrame KeyTime="0" Value="#FF910E0A"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed"/>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Rectangle x:Name="rectangle" Fill="#FFD14836" Margin="0" Stroke="#FFD4211B" Height="30" RadiusX="2" RadiusY="2"/>
							<StackPanel Margin="15,0" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
								<Label Content="&#xF04a;" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" Padding="0" Foreground="White" FontFamily="/OS11;component/Fonts/#FontAwesome" FontWeight="Bold" HorizontalContentAlignment="Center" Margin="0,0,5,0"/>
								<Label Content="BACK" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" Foreground="White" FontFamily="Lucida Sans" FontWeight="Bold"/>
							</StackPanel>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" Height="0"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</UserControl.Resources>
	<Grid x:Name="LayoutRoot">
		<DockPanel x:Name="MainDockPanel" Margin="0" Background="White" LastChildFill="False">
			<DockPanel x:Name="TopButtonsDock" Height="76" LastChildFill="False" Margin="0" VerticalAlignment="Top" Background="WhiteSmoke" DockPanel.Dock="Top">
				<Image Margin="10,-1,0,0" Source="/OS11;component/images/mosaiq_logo_small.png" Stretch="Fill" HorizontalAlignment="Left" VerticalAlignment="Top" Width="58" Height="70"/>
				<Button x:Name="BackBtn" Content="Button" HorizontalAlignment="Center" Margin="10,23,0,23" Style="{DynamicResource BackBtn}" VerticalAlignment="Center" Click="BackBtn_Click"/>
				<Button x:Name="AddBtn" Content="Button" HorizontalAlignment="Center" Margin="10,0,0,0" Style="{DynamicResource AddBtnTemplate}" VerticalAlignment="Center" Click="AddButton_Click"/>
				<Button x:Name="SaveBtn" Content="Button" HorizontalAlignment="Center" Margin="10,0,0,0" Style="{DynamicResource SaveBtnTemplate}" VerticalAlignment="Center"/>
				<Button x:Name="AddSampleBtn" Content="Button" HorizontalAlignment="Center" Margin="4,0,0,0" Style="{DynamicResource AddSampleBtnTemplate}" VerticalAlignment="Center"/>
				<Button x:Name="MosaicItBtn" Content="Button" HorizontalAlignment="Center" Margin="35,0,0,0" Style="{DynamicResource MosaicItBtnTemplate}" VerticalAlignment="Center" Click="MosaicItBtn_Click"/>
				<Button x:Name="HelpBtn" Content="Button" HorizontalAlignment="Center" Margin="4,0,8,0" Style="{DynamicResource HelpBtnStyle}" VerticalAlignment="Center" DockPanel.Dock="Right" Click="HelpBtn_Click"/>
				<Button x:Name="SettingsBtn" Content="Button" HorizontalAlignment="Center" Margin="4,0,8,0" Style="{DynamicResource SettingsBtnTemplate}" VerticalAlignment="Center" DockPanel.Dock="Right" Click="SettingsBtn_Click"/>
			</DockPanel>
			<DockPanel x:Name="BottomDockPanel" LastChildFill="False" Margin="0" DockPanel.Dock="Bottom" Background="#FFEBEBEB" Height="40"/>
			<Grid x:Name="CentralGrid" Background="White" Margin="0" Width="{Binding ActualWidth, ElementName=MainDockPanel, Mode=OneWay}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="0*"/>
					<RowDefinition/>
					<RowDefinition Height="0*"/>
				</Grid.RowDefinitions>
				<DockPanel x:Name="CentralStackPanel" Background="White" Margin="0" Grid.Row="1">
                    <ListBox x:Name="InputImageListBox" Margin="0" ItemsSource="{Binding TornListOC}" ItemTemplate="{DynamicResource ImageListItemTemplate}" HorizontalAlignment="Left" Width="250" BorderThickness="0,0,1,0" Background="White" BorderBrush="#FFDADADA" ItemContainerStyle="{DynamicResource TornImageItemContainerStyle}" ItemsPanel="{DynamicResource ItemsPanelTemplate1}" Style="{DynamicResource TornImageListTemplate}"/>
					<Grid x:Name="ParametersGrid" Margin="0" HorizontalAlignment="Right" Background="White" Width="250" DockPanel.Dock="Right">
						<Border BorderBrush="#FFDADADA" BorderThickness="1,0,0,0" Margin="0"/>
						<DockPanel>
							<Grid Height="30" VerticalAlignment="Top" Width="250" DockPanel.Dock="Top">
								<Rectangle Fill="#FFE9E9E9" Stroke="#FFE0E0E0" Margin="0"/>
								<Label Content="Tuning Parameters" HorizontalAlignment="Left" FontSize="13.333" UseLayoutRounding="False" FontWeight="Bold" Foreground="#FF585858" Margin="20,0,0,0" d:LayoutOverrides="Height"/>
								<Label Content="" Margin="0,3,0,0" FontSize="14.667" FontFamily="/OS11;component/Fonts/#FontAwesome" Foreground="#FF666666" HorizontalAlignment="Left" d:LayoutOverrides="Height"/>
							</Grid>
							<StackPanel x:Name="ParamsPaneStackPaanel" Margin="0,5,0,0" Width="230" DockPanel.Dock="Top">
								<Grid x:Name="ArcLengthGrid" Height="54" Margin="10,0" VerticalAlignment="Center">
									<Label Content="Arc Length Multiplier" HorizontalAlignment="Left" Padding="0" FontSize="13.333" Foreground="#FF3D3D3D" VerticalAlignment="Top"/>
									<DockPanel Height="25" VerticalAlignment="Bottom">
										<Label Content="0" Margin="0" Foreground="#FF1B76B1" Padding="0,0,5,5"/>
										<Label Content="20" Margin="0" DockPanel.Dock="Right" Foreground="#FF1B76B1" Padding="5,0,0,5"/>
										<Slider x:Name="ArcLengthMultiplierSettingSlider" Maximum="20" SmallChange="1" AutoToolTipPlacement="TopLeft" ToolTip="Change Arc Length Multiplier" DockPanel.Dock="Top" IsSnapToTickEnabled="True" Width="150" Value="{Binding appConfig.arcLengthMultiplier}"/>
									</DockPanel>
								</Grid>
								<Path Data="M0,62.666667 L230.0087,62.666667" Fill="#FFADADAD" Height="1" Margin="-12,4,-12,0" Stretch="Fill" Stroke="#FFE0E0E0"/>
								<Grid x:Name="ScaleFactorGrid" Height="54" Margin="10,10,10,0" VerticalAlignment="Center">
									<Label Content="Scale Factor" HorizontalAlignment="Left" Padding="0" FontSize="13.333" Foreground="#FF3D3D3D" VerticalAlignment="Top"/>
									<DockPanel Height="25" VerticalAlignment="Bottom">
										<Label Content="500" Margin="0" Foreground="#FF1B76B1" Padding="0,0,5,5"/>
										<Label Content="1500" Margin="0" DockPanel.Dock="Right" Foreground="#FF1B76B1" Padding="5,0,0,5"/>
										<Slider x:Name="ScaleFactorSettingSlider" Maximum="1500" SmallChange="100" AutoToolTipPlacement="TopLeft" ToolTip="Change Scale Factor" DockPanel.Dock="Top" LargeChange="100" Minimum="500" TickFrequency="100" Width="150" IsSnapToTickEnabled="True" Value="{Binding appConfig.scaleFactor}"/>
									</DockPanel>
								</Grid>
								<Path Data="M0,62.666667 L230.0087,62.666667" Fill="#FFADADAD" Height="1" Margin="-12,4,-12,0" Stretch="Fill" Stroke="#FFE0E0E0"/>
								<Grid x:Name="ApproxPolyGrid_Copy" Height="54" Margin="10,10,10,0" VerticalAlignment="Center">
									<Label Content="Approx Polygon Parameter" HorizontalAlignment="Left" Padding="0" FontSize="13.333" Foreground="#FF3D3D3D" VerticalAlignment="Top"/>
									<DockPanel Height="25" VerticalAlignment="Bottom">
										<Label Content="0.03" Margin="0" Foreground="#FF1B76B1" Padding="0,0,5,5"/>
										<Label Content="0.10" Margin="0" DockPanel.Dock="Right" Foreground="#FF1B76B1" Padding="5,0,0,5"/>
										<Slider x:Name="ApproxPolygonParamSlider" Maximum="0.1" SmallChange="0.01" AutoToolTipPlacement="TopLeft" ToolTip="Change Approx Polygon Parameter" DockPanel.Dock="Top" LargeChange="0.01" Minimum="0.03" TickFrequency="0.01" Width="150" IsSnapToTickEnabled="True" Value="{Binding appConfig.approxPolyparameter}" AutoToolTipPrecision="2"/>
									</DockPanel>
								</Grid>
								<Path Data="M0,62.666667 L230.0087,62.666667" Fill="#FFADADAD" Height="1" Margin="-12,4,-12,0" Stretch="Fill" Stroke="#FFE0E0E0"/>
								<Grid x:Name="ApproxPolyGrid_Copy1" Height="54" Margin="10,10,10,0" VerticalAlignment="Center">
									<Label Content="Background Threshold" HorizontalAlignment="Left" Padding="0" FontSize="13.333" Foreground="#FF3D3D3D" VerticalAlignment="Top"/>
									<DockPanel Height="25" VerticalAlignment="Bottom">
										<Label Content="1" Margin="0" Foreground="#FF1B76B1" Padding="0,0,5,5"/>
										<Label Content="10" Margin="0" DockPanel.Dock="Right" Foreground="#FF1B76B1" Padding="5,0,0,5"/>
										<Slider x:Name="BackgroundThresholdSlider" SmallChange="1" AutoToolTipPlacement="TopLeft" ToolTip="Change background Threshold Parameter" DockPanel.Dock="Top" Minimum="1" Width="150" IsSnapToTickEnabled="True" Value="{Binding appConfig.backgroundThreshold}"/>
									</DockPanel>
								</Grid>
								<Path Data="M0,62.666667 L230.0087,62.666667" Fill="#FFADADAD" Height="1" Margin="-12,4,-12,0" Stretch="Fill" Stroke="#FFE0E0E0"/>
								<Grid x:Name="NoiseReGrid" Height="25" Margin="10,10,10,0" VerticalAlignment="Center">
									<Label Content="Noise Reduction" HorizontalAlignment="Left" Padding="0" FontSize="13.333" Foreground="#FF3D3D3D" VerticalAlignment="Top"/>
									<CheckBox x:Name="NoiseReductionCheckBox" Content="" HorizontalAlignment="Right" Margin="0" Padding="0" IsChecked="{Binding noiseReduction}" ToolTip="Noise Reduction?"/>
								</Grid>
								<Path Data="M0,62.666667 L230.0087,62.666667" Fill="#FFADADAD" Height="1" Margin="-12,4,-12,0" Stretch="Fill" Stroke="#FFE0E0E0"/>
								<Grid x:Name="Multi_Edge" Height="25" Margin="10,10,10,0" VerticalAlignment="Center">
									<Label Content="Multiple Edge" HorizontalAlignment="Left" Padding="0" FontSize="13.333" Foreground="#FF3D3D3D" VerticalAlignment="Top" ToolTip="Multiple Edge"/>
									<CheckBox x:Name="MultiEdgeParamCheckBox" Content="" HorizontalAlignment="Right" Margin="0" Padding="0" IsChecked="{Binding multiEdge}" ToolTip="Multiple Edge Parameter"/>
								</Grid>
								<Path Data="M0,62.666667 L230.0087,62.666667" Fill="#FFADADAD" Height="1" Margin="-12,4,-12,0" Stretch="Fill" Stroke="#FFE0E0E0"/>
							</StackPanel>
							<Button x:Name="ReconstructAgainBtn" Content="Button" Height="60" Margin="0" Style="{DynamicResource ReconstructAgainBtnTemp}" VerticalAlignment="Bottom" Width="250" DockPanel.Dock="Bottom" Click="ReconstructAgainBtn_Click" Visibility="Hidden"/>
						</DockPanel>
					</Grid>
					<Grid x:Name="CenterRightGrid" Margin="0" Background="#FFFDFDFD">
						<Grid x:Name="NextStepGrid" Margin="0" IsEnabled="False" HorizontalAlignment="Center" VerticalAlignment="Center">
							<Border BorderBrush="#FFABABAB" BorderThickness="1" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" CornerRadius="4" Padding="10" Opacity="0.62">
								<Image Margin="0" Source="/OS11;component/images/broken_image.png" Stretch="Fill" HorizontalAlignment="Center" Width="240" Height="184" ToolTip="Add Images to start reconstruction" VerticalAlignment="Center"/>

							</Border>
							<Label x:Name="InfoLabel" Content="Add Images to start reconstruction" Height="36" Margin="0,250,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FF3F3F3F" FontSize="16"/>
						</Grid>
						<Grid x:Name="LoadingGrid" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Visibility="Hidden">
							<Image x:Name="loading_gif" gif:ImageBehavior.AnimatedSource="../images/mosaiq_loading.gif" HorizontalAlignment="Center" VerticalAlignment="Center" Width="74" Margin="0" />
							<Label x:Name="dynamicInfoLabel" Content="Re-Constructing Image. Please wait ..." Margin="0,110,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="16" Foreground="#FF505050"/>
						</Grid>
						<Grid x:Name="OutputGrid" Margin="0" ClipToBounds="True">
                            
							<Border Margin="20" Padding="20">
								<Image x:Name="OutputImage" RenderTransformOrigin="0.5,0.5" MouseLeftButtonDown="OutputImage_MouseLeftButtonDown" MouseMove="OutputImage_MouseMove" MouseLeave="OutputImage_MouseLeave" MouseEnter="OutputImage_MouseEnter" MouseLeftButtonUp="OutputImage_MouseLeftButtonUp" MouseWheel="OutputImage_MouseWheel" MouseDown="OutputImage_MouseDown"/>
                            
							</Border>
						</Grid>
						<Grid Height="52" Margin="0,0,0,4" VerticalAlignment="Bottom" HorizontalAlignment="Center">
							<Rectangle Fill="#FF428BCA" Margin="0,22,0,0" Stroke="White" HorizontalAlignment="Center" Width="160"/>
							<Button x:Name="rotateLeftBtn" Content="Button" HorizontalAlignment="Center" Margin="-165,0,0,0" Style="{DynamicResource rotateLeftBtnTemplate}" Width="52" Click="rotateLeftBtn_Click" Foreground="White"/>
							<Button x:Name="rotateRightBtn" Content="Button" HorizontalAlignment="Center" Margin="0,0,-165,0" Style="{DynamicResource rotateRightBtnTemplate}" Width="52" Click="rotateRightBtn_Click"/>
							<Slider x:Name="zoom" Margin="0,23,0,0" Width="100" ValueChanged="zoom_ValueChanged" VerticalAlignment="Center" HorizontalAlignment="Center" Maximum="5" Minimum="1" Value="1" IsEnabled="True"/>
						</Grid>
					</Grid>
				</DockPanel>
			</Grid>
		</DockPanel>
	</Grid>
</UserControl>
